{"ast":null,"code":"import _asyncToGenerator from \"/Users/kylenewins/Documents/The Moat/the_moat_io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport EndpointsBase from './EndpointsBase.js';\nexport default class PlayerEndpoints extends EndpointsBase {\n  getPlaybackState(market, additional_types) {\n    const params = this.paramsFor({\n      market,\n      additional_types\n    });\n    return this.getRequest(`me/player${params}`);\n  }\n\n  getAvailableDevices() {\n    return this.getRequest('me/player/devices');\n  }\n\n  getCurrentlyPlayingTrack(market, additional_types) {\n    const params = this.paramsFor({\n      market,\n      additional_types\n    });\n    return this.getRequest(`me/player/currently-playing${params}`);\n  }\n\n  getRecentlyPlayedTracks(limit, queryRange) {\n    const paramObj = {\n      limit\n    };\n\n    if (queryRange) {\n      if (queryRange.type === \"before\") {\n        paramObj.before = queryRange.timestamp;\n      } else if (queryRange.type === \"after\") {\n        paramObj.after = queryRange.timestamp;\n      }\n    }\n\n    const params = this.paramsFor(paramObj);\n    return this.getRequest(`me/player/recently-played${params}`);\n  }\n\n  getUsersQueue() {\n    return this.getRequest('me/player/queue');\n  }\n\n  transferPlayback(device_ids, play) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (device_ids.length > 1) {\n        throw new Error(\"Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request\");\n      }\n\n      yield _this.putRequest('me/player', {\n        device_ids,\n        play\n      });\n    })();\n  }\n\n  startResumePlayback(device_id, context_uri, uris, offset, positionMs) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this2.paramsFor({\n        device_id\n      });\n\n      yield _this2.putRequest(`me/player/play${params}`, {\n        context_uri,\n        uris,\n        offset,\n        positionMs\n      });\n    })();\n  }\n\n  pausePlayback(device_id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this3.paramsFor({\n        device_id\n      });\n\n      yield _this3.putRequest(`me/player/pause${params}`);\n    })();\n  }\n\n  skipToNext(device_id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this4.paramsFor({\n        device_id\n      });\n\n      yield _this4.postRequest(`me/player/next${params}`);\n    })();\n  }\n\n  skipToPrevious(device_id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this5.paramsFor({\n        device_id\n      });\n\n      yield _this5.postRequest(`me/player/previous${params}`);\n    })();\n  }\n\n  seekToPosition(position_ms, device_id) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this6.paramsFor({\n        position_ms,\n        device_id\n      });\n\n      yield _this6.putRequest(`me/player/seek${params}`);\n    })();\n  }\n\n  setRepeatMode(state, device_id) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this7.paramsFor({\n        state,\n        device_id\n      });\n\n      yield _this7.putRequest(`me/player/repeat${params}`);\n    })();\n  }\n\n  setPlaybackVolume(volume_percent, device_id) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this8.paramsFor({\n        volume_percent,\n        device_id\n      });\n\n      yield _this8.putRequest(`me/player/volume${params}`);\n    })();\n  }\n\n  togglePlaybackShuffle(state, device_id) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this9.paramsFor({\n        state,\n        device_id\n      });\n\n      yield _this9.putRequest(`me/player/shuffle${params}`);\n    })();\n  }\n\n  addItemToPlaybackQueue(uri, device_id) {\n    var _this0 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this0.paramsFor({\n        uri,\n        device_id\n      });\n\n      yield _this0.postRequest(`me/player/queue${params}`);\n    })();\n  }\n\n} //# sourceMappingURL=PlayerEndpoints.js.map","map":null,"metadata":{},"sourceType":"module"}
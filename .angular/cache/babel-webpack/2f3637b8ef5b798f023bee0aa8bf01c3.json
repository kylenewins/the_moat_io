{"ast":null,"code":"import _asyncToGenerator from \"/Users/kylenewins/Documents/The Moat/the_moat_io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nexport default class ClientCredentialsStrategy {\n  clientId;\n  clientSecret;\n  scopes;\n  static cacheKey = \"spotify-sdk:ClientCredentialsStrategy:token\";\n  configuration = null;\n\n  get cache() {\n    return this.configuration.cachingStrategy;\n  }\n\n  constructor(clientId, clientSecret, scopes = []) {\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.scopes = scopes;\n  }\n\n  setConfiguration(configuration) {\n    this.configuration = configuration;\n  }\n\n  getOrCreateAccessToken() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const token = yield _this.cache.getOrCreate(ClientCredentialsStrategy.cacheKey, /*#__PURE__*/_asyncToGenerator(function* () {\n        const token = yield _this.getTokenFromApi();\n        return AccessTokenHelpers.toCachable(token);\n      }), /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (_) {\n          const refreshed = yield _this.getTokenFromApi();\n          return AccessTokenHelpers.toCachable(refreshed);\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      return token;\n    })();\n  }\n\n  getAccessToken() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const token = yield _this2.cache.get(ClientCredentialsStrategy.cacheKey);\n      return token;\n    })();\n  }\n\n  removeAccessToken() {\n    this.cache.remove(ClientCredentialsStrategy.cacheKey);\n  }\n\n  getTokenFromApi() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const options = {\n        grant_type: 'client_credentials',\n        scope: _this3.scopes.join(' ')\n      };\n      const bodyAsString = Object.keys(options).map(key => key + '=' + options[key]).join('&');\n      const hasBuffer = typeof Buffer !== 'undefined';\n      const credentials = `${_this3.clientId}:${_this3.clientSecret}`;\n      const basicAuth = hasBuffer ? Buffer.from(credentials).toString('base64') : btoa(credentials);\n      const result = yield fetch(\"https://accounts.spotify.com/api/token\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          \"Authorization\": `Basic ${basicAuth}`\n        },\n        body: bodyAsString\n      });\n\n      if (result.status !== 200) {\n        throw new Error(\"Failed to get access token.\");\n      }\n\n      const json = yield result.json();\n      return json;\n    })();\n  }\n\n} //# sourceMappingURL=ClientCredentialsStrategy.js.map","map":null,"metadata":{},"sourceType":"module"}
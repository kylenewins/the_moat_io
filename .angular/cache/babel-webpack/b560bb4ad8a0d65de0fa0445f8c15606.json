{"ast":null,"code":"import _asyncToGenerator from \"/Users/kylenewins/Documents/The Moat/the_moat_io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport EndpointsBase from './EndpointsBase.js';\nexport default class CurrentUserEndpoints extends EndpointsBase {\n  albums;\n  audiobooks;\n  episodes;\n  playlists;\n  shows;\n  tracks;\n\n  constructor(api) {\n    super(api);\n    this.albums = new CurrentUserAlbumsEndpoints(api);\n    this.audiobooks = new CurrentUserAudiobooksEndpoints(api);\n    this.episodes = new CurrentUserEpisodesEndpoints(api);\n    this.playlists = new CurrentUserPlaylistsEndpoints(api);\n    this.shows = new CurrentUserShowsEndpoints(api);\n    this.tracks = new CurrentUserTracksEndpoints(api);\n  }\n\n  profile() {\n    return this.getRequest('me');\n  }\n\n  topItems(type, time_range, limit, offset) {\n    const params = this.paramsFor({\n      time_range,\n      limit,\n      offset\n    });\n    return this.getRequest(`me/top/${type}${params}`);\n  }\n\n  followedArtists(after, limit) {\n    const params = this.paramsFor({\n      type: \"artist\",\n      after,\n      limit\n    });\n    return this.getRequest(`me/following${params}`);\n  }\n\n  followArtistsOrUsers(ids, type) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this.paramsFor({\n        type\n      });\n\n      yield _this.putRequest(`me/following${params}`, {\n        ids\n      });\n    })();\n  }\n\n  unfollowArtistsOrUsers(ids, type) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const params = _this2.paramsFor({\n        type\n      });\n\n      yield _this2.deleteRequest(`me/following${params}`, {\n        ids\n      });\n    })();\n  }\n\n  followsArtistsOrUsers(ids, type) {\n    const params = this.paramsFor({\n      ids,\n      type\n    });\n    return this.getRequest(`me/following/contains${params}`);\n  }\n\n}\n\nclass CurrentUserAlbumsEndpoints extends EndpointsBase {\n  savedAlbums(limit, offset, market) {\n    const params = this.paramsFor({\n      limit,\n      offset,\n      market\n    });\n    return this.getRequest(`me/albums${params}`);\n  }\n\n  saveAlbums(ids) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.putRequest('me/albums', ids);\n    })();\n  }\n\n  removeSavedAlbums(ids) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.deleteRequest('me/albums', ids);\n    })();\n  }\n\n  hasSavedAlbums(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`me/albums/contains${params}`);\n  }\n\n}\n\nclass CurrentUserAudiobooksEndpoints extends EndpointsBase {\n  savedAudiobooks(limit, offset) {\n    const params = this.paramsFor({\n      limit,\n      offset\n    });\n    return this.getRequest(`me/audiobooks${params}`);\n  }\n\n  saveAudiobooks(ids) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.putRequest('me/audiobooks', ids);\n    })();\n  }\n\n  removeSavedAudiobooks(ids) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.deleteRequest('me/audiobooks', ids);\n    })();\n  }\n\n  hasSavedAudiobooks(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`me/audiobooks/contains${params}`);\n  }\n\n}\n\nclass CurrentUserEpisodesEndpoints extends EndpointsBase {\n  savedEpisodes(market, limit, offset) {\n    const params = this.paramsFor({\n      market,\n      limit,\n      offset\n    });\n    return this.getRequest(`me/episodes${params}`);\n  }\n\n  saveEpisodes(ids) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.putRequest(`me/episodes`, ids);\n    })();\n  }\n\n  removeSavedEpisodes(ids) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this8.deleteRequest(`me/episodes`, ids);\n    })();\n  }\n\n  hasSavedEpisodes(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`me/episodes/contains${params}`);\n  }\n\n}\n\nclass CurrentUserPlaylistsEndpoints extends EndpointsBase {\n  playlists(limit, offset) {\n    const params = this.paramsFor({\n      limit,\n      offset\n    });\n    return this.getRequest(`me/playlists${params}`);\n  }\n\n  follow(playlist_id) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this9.putRequest(`playlists/${playlist_id}/followers`);\n    })();\n  }\n\n  unfollow(playlist_id) {\n    var _this0 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this0.deleteRequest(`playlists/${playlist_id}/followers`);\n    })();\n  }\n\n  isFollowing(playlistId, ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`playlists/${playlistId}/followers/contains${params}`);\n  }\n\n}\n\nclass CurrentUserShowsEndpoints extends EndpointsBase {\n  savedShows(limit, offset) {\n    const params = this.paramsFor({\n      limit,\n      offset\n    });\n    return this.getRequest(`me/shows${params}`);\n  }\n\n  saveShows(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.putRequest(`me/shows${params}`);\n  }\n\n  removeSavedShows(ids, market) {\n    const params = this.paramsFor({\n      ids,\n      market\n    });\n    return this.deleteRequest(`me/shows${params}`);\n  }\n\n  hasSavedShow(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`me/shows/contains${params}`);\n  }\n\n}\n\nclass CurrentUserTracksEndpoints extends EndpointsBase {\n  savedTracks(limit, offset, market) {\n    const params = this.paramsFor({\n      limit,\n      offset,\n      market\n    });\n    return this.getRequest(`me/tracks${params}`);\n  }\n\n  saveTracks(ids) {\n    var _this1 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this1.putRequest('me/tracks', ids);\n    })();\n  }\n\n  removeSavedTracks(ids) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this10.deleteRequest('me/tracks', ids);\n    })();\n  }\n\n  hasSavedTracks(ids) {\n    const params = this.paramsFor({\n      ids\n    });\n    return this.getRequest(`me/tracks/contains${params}`);\n  }\n\n} //# sourceMappingURL=CurrentUserEndpoints.js.map","map":null,"metadata":{},"sourceType":"module"}
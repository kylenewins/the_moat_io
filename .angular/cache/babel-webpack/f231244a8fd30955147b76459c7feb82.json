{"ast":null,"code":"import _asyncToGenerator from \"/Users/kylenewins/Documents/The Moat/the_moat_io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport EndpointsBase from './EndpointsBase.js';\nexport default class PlaylistsEndpoints extends EndpointsBase {\n  getPlaylist(playlist_id, market, fields, additional_types) {\n    // TODO: better support for fields\n    const params = this.paramsFor({\n      market,\n      fields,\n      additional_types: additional_types?.join(',')\n    });\n    return this.getRequest(`playlists/${playlist_id}${params}`);\n  }\n\n  getPlaylistItems(playlist_id, market, fields, limit, offset, additional_types) {\n    // TODO: better support for fields\n    const params = this.paramsFor({\n      market,\n      fields,\n      limit,\n      offset,\n      additional_types: additional_types?.join(',')\n    });\n    return this.getRequest(`playlists/${playlist_id}/tracks${params}`);\n  }\n\n  changePlaylistDetails(playlist_id, request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.putRequest(`playlists/${playlist_id}`, request);\n    })();\n  }\n\n  movePlaylistItems(playlist_id, range_start, range_length, moveToPosition) {\n    return this.updatePlaylistItems(playlist_id, {\n      range_start,\n      range_length,\n      insert_before: moveToPosition\n    });\n  }\n\n  updatePlaylistItems(playlist_id, request) {\n    return this.putRequest(`playlists/${playlist_id}/tracks`, request);\n  }\n\n  addItemsToPlaylist(playlist_id, uris, position) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.postRequest(`playlists/${playlist_id}/tracks`, {\n        position,\n        uris: uris\n      });\n    })();\n  }\n\n  removeItemsFromPlaylist(playlist_id, request) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.deleteRequest(`playlists/${playlist_id}/tracks`, request);\n    })();\n  }\n\n  getUsersPlaylists(user_id, limit, offset) {\n    const params = this.paramsFor({\n      limit,\n      offset\n    });\n    return this.getRequest(`users/${user_id}/playlists${params}`);\n  }\n\n  createPlaylist(user_id, request) {\n    return this.postRequest(`users/${user_id}/playlists`, request);\n  }\n\n  getPlaylistCoverImage(playlist_id) {\n    return this.getRequest(`playlists/${playlist_id}/images`);\n  }\n\n  addCustomPlaylistCoverImage(playlist_id, imageData) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let base64EncodedJpeg = \"\";\n\n      if (imageData instanceof Buffer) {\n        base64EncodedJpeg = imageData.toString(\"base64\");\n      } else if (imageData instanceof HTMLCanvasElement) {\n        base64EncodedJpeg = imageData.toDataURL(\"image/jpeg\").split(';base64,')[1];\n      } else if (imageData instanceof HTMLImageElement) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = imageData.width;\n        canvas.height = imageData.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        if (!ctx) {\n          throw new Error(\"Could not get canvas context\");\n        }\n\n        ctx.drawImage(imageData, 0, 0);\n        base64EncodedJpeg = canvas.toDataURL(\"image/jpeg\").split(';base64,')[1];\n      } else if (typeof imageData === \"string\") {\n        base64EncodedJpeg = imageData;\n      } else {\n        throw new Error(\"ImageData must be a Buffer, HTMLImageElement, HTMLCanvasElement, or string containing a base64 encoded jpeg\");\n      }\n\n      yield _this4.addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg);\n    })();\n  }\n\n  addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.putRequest(`playlists/${playlist_id}/images`, base64EncodedJpeg, \"image/jpeg\");\n    })();\n  }\n\n} //# sourceMappingURL=PlaylistsEndpoints.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/kylenewins/Documents/The Moat/the_moat_io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isEmptyAccessToken } from \"../auth/IAuthStrategy.js\";\nexport default class GenericCache {\n  storage;\n  updateFunctions;\n  autoRenewInterval;\n  autoRenewWindow;\n\n  constructor(storage, updateFunctions = new Map(), autoRenewInterval = 0, autoRenewWindow = 2 * 60 * 1000 // Two minutes\n  ) {\n    this.storage = storage;\n    this.updateFunctions = updateFunctions;\n    this.autoRenewInterval = autoRenewInterval;\n    this.autoRenewWindow = autoRenewWindow;\n\n    if (this.autoRenewInterval > 0) {\n      setInterval(() => this.autoRenewRenewableItems(), this.autoRenewInterval);\n    }\n  }\n\n  getOrCreate(cacheKey, createFunction, updateFunction) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (updateFunction) {\n        _this.updateFunctions.set(cacheKey, updateFunction);\n      }\n\n      const item = yield _this.get(cacheKey);\n\n      if (item) {\n        return item;\n      }\n\n      const newCacheItem = yield createFunction();\n\n      if (!newCacheItem) {\n        throw new Error(\"Could not create cache item\");\n      }\n\n      if (!isEmptyAccessToken(newCacheItem)) {\n        _this.setCacheItem(cacheKey, newCacheItem);\n      }\n\n      return newCacheItem;\n    })();\n  }\n\n  get(cacheKey) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let asString = _this2.storage.get(cacheKey);\n\n      let cachedItem = asString ? JSON.parse(asString) : null;\n\n      if (_this2.itemDueToExpire(cachedItem) && _this2.updateFunctions.has(cacheKey)) {\n        const updateFunction = _this2.updateFunctions.get(cacheKey);\n\n        yield _this2.tryUpdateItem(cacheKey, cachedItem, updateFunction); // Ensure updated item is returned\n\n        asString = _this2.storage.get(cacheKey);\n        cachedItem = asString ? JSON.parse(asString) : null;\n      }\n\n      if (!cachedItem) {\n        return null;\n      }\n\n      if (cachedItem.expires && (cachedItem.expires === -1 || cachedItem.expires <= Date.now())) {\n        _this2.remove(cacheKey);\n\n        return null;\n      }\n\n      if (cachedItem.expiresOnAccess && cachedItem.expiresOnAccess === true) {\n        _this2.remove(cacheKey);\n\n        return cachedItem;\n      }\n\n      return cachedItem;\n    })();\n  }\n\n  set(cacheKey, value, expiresIn) {\n    const expires = Date.now() + expiresIn;\n    const cacheItem = { ...value,\n      expires\n    };\n    this.setCacheItem(cacheKey, cacheItem);\n  }\n\n  setCacheItem(cacheKey, cacheItem) {\n    const asString = JSON.stringify(cacheItem);\n    this.storage.set(cacheKey, asString);\n  }\n\n  remove(cacheKey) {\n    this.storage.remove(cacheKey);\n  }\n\n  itemDueToExpire(item) {\n    if (!item) {\n      return false;\n    }\n\n    if (!item.expires) {\n      return false;\n    }\n\n    return item.expires - Date.now() < this.autoRenewWindow;\n  }\n\n  autoRenewRenewableItems() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.updateFunctions.forEach( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (updateFunction, key) {\n          const cachedItem = yield _this3.get(key);\n\n          if (!cachedItem) {\n            return;\n          }\n\n          if (updateFunction && _this3.itemDueToExpire(cachedItem)) {\n            yield _this3.tryUpdateItem(key, cachedItem, updateFunction);\n          }\n        });\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  tryUpdateItem(key, cachedItem, updateFunction) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const updated = yield updateFunction(cachedItem);\n\n        if (updated) {\n          _this4.setCacheItem(key, updated);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }\n\n} //# sourceMappingURL=GenericCache.js.map","map":null,"metadata":{},"sourceType":"module"}